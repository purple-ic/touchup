name: Release

on:
  release:
    types: [ published ]
  push:
    branches:
      - workflow_test

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo_cache-${{ hashFiles('Cargo.lock') }}
          restore-keys:
            cargo_cache-
      #      - run: |
      #          cargo install cross
      #          rustup toolchain install stable-x86_64-pc-windows-gnu --force-non-host
      #        name: Rust setup
      - name: Install packages
        run: sudo apt-get install subversion ragel curl texinfo g++ ed bison flex cvs yasm automake libtool autoconf gcc cmake git make pkg-config zlib1g-dev unzip pax nasm gperf autogen bzip2 autoconf-archive p7zip-full meson clang python3-distutils python-is-python3 -y
      - run: |
          FFMPEG_REF=$(cat ffmpeg_ref.txt)
          echo "FFMPEG_REF=$FFMPEG_REF" >> $GITHUB_ENV
        name: Set FFmpeg git ref
      - uses: actions/checkout@v4
        name: Checkout FFmpeg build script
        with:
          repository: 'rdp/ffmpeg-windows-build-helpers'
          path: "ffmpeg_build"
          fetch-depth: 1
      - name: Build FFmpeg
        run: |
          cd ffmpeg_build
          ./cross_compile_ffmpeg.sh --ffmpeg-git-checkout-version=${{ env.FFMPEG_REF }} --build-ffmpeg-static=n --build-ffmpeg-shared=y --sandbox-ok=y --enable-gpl=n --git-get-latest=n --compiler-flavors=win64
      #      - name: Build TouchUp
      #        run: cargo cross build --target x86_64-pc-windows-gnu --release --verbose -F update
      - run: |
          mkdir out_windows
        # wildcard should be fine since there should only be one subdirectory to win64/
               cp ffmpeg_build/sandbox/win64/*/. out_windows/
        #          cp target/release/touchup.exe out_windows/
        name: Prepare artifact directory
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: out_windows/